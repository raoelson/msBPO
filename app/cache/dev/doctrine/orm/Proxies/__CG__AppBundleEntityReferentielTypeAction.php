<?php

namespace Proxies\__CG__\AppBundle\Entity\Referentiel;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class TypeAction extends \AppBundle\Entity\Referentiel\TypeAction implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Referentiel\\TypeAction' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Referentiel\\TypeAction' . "\0" . 'libelle', '' . "\0" . 'AppBundle\\Entity\\Referentiel\\TypeAction' . "\0" . 'dateCreation', '' . "\0" . 'AppBundle\\Entity\\Referentiel\\TypeAction' . "\0" . 'dateModification', '' . "\0" . 'AppBundle\\Entity\\Referentiel\\TypeAction' . "\0" . 'dateSuppression', '' . "\0" . 'AppBundle\\Entity\\Referentiel\\TypeAction' . "\0" . 'statuts', '' . "\0" . 'AppBundle\\Entity\\Referentiel\\TypeAction' . "\0" . 'categories', '' . "\0" . 'AppBundle\\Entity\\Referentiel\\TypeAction' . "\0" . 'operations', '' . "\0" . 'AppBundle\\Entity\\Referentiel\\TypeAction' . "\0" . 'transmissions');
        }

        return array('__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Referentiel\\TypeAction' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Referentiel\\TypeAction' . "\0" . 'libelle', '' . "\0" . 'AppBundle\\Entity\\Referentiel\\TypeAction' . "\0" . 'dateCreation', '' . "\0" . 'AppBundle\\Entity\\Referentiel\\TypeAction' . "\0" . 'dateModification', '' . "\0" . 'AppBundle\\Entity\\Referentiel\\TypeAction' . "\0" . 'dateSuppression', '' . "\0" . 'AppBundle\\Entity\\Referentiel\\TypeAction' . "\0" . 'statuts', '' . "\0" . 'AppBundle\\Entity\\Referentiel\\TypeAction' . "\0" . 'categories', '' . "\0" . 'AppBundle\\Entity\\Referentiel\\TypeAction' . "\0" . 'operations', '' . "\0" . 'AppBundle\\Entity\\Referentiel\\TypeAction' . "\0" . 'transmissions');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (TypeAction $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setLibelle($libelle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLibelle', array($libelle));

        return parent::setLibelle($libelle);
    }

    /**
     * {@inheritDoc}
     */
    public function getLibelle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLibelle', array());

        return parent::getLibelle();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateCreation($dateCreation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateCreation', array($dateCreation));

        return parent::setDateCreation($dateCreation);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateCreation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateCreation', array());

        return parent::getDateCreation();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateModification($dateModification)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateModification', array($dateModification));

        return parent::setDateModification($dateModification);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateModification()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateModification', array());

        return parent::getDateModification();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateSuppression($dateSuppression)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateSuppression', array($dateSuppression));

        return parent::setDateSuppression($dateSuppression);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateSuppression()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateSuppression', array());

        return parent::getDateSuppression();
    }

    /**
     * {@inheritDoc}
     */
    public function edited()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'edited', array());

        return parent::edited();
    }

    /**
     * {@inheritDoc}
     */
    public function addStatuts(\AppBundle\Entity\Referentiel\Statut $statuts)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addStatuts', array($statuts));

        return parent::addStatuts($statuts);
    }

    /**
     * {@inheritDoc}
     */
    public function setStatuts($statuts)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatuts', array($statuts));

        return parent::setStatuts($statuts);
    }

    /**
     * {@inheritDoc}
     */
    public function removeStatuts(\AppBundle\Entity\Referentiel\Statut $statuts)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeStatuts', array($statuts));

        return parent::removeStatuts($statuts);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatuts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatuts', array());

        return parent::getStatuts();
    }

    /**
     * {@inheritDoc}
     */
    public function getStatutsLibelle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatutsLibelle', array());

        return parent::getStatutsLibelle();
    }

    /**
     * {@inheritDoc}
     */
    public function addCategorie(\AppBundle\Entity\Referentiel\CategorieAppel $categories)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCategorie', array($categories));

        return parent::addCategorie($categories);
    }

    /**
     * {@inheritDoc}
     */
    public function setCategorie($categories)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategorie', array($categories));

        return parent::setCategorie($categories);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCategories(\AppBundle\Entity\Referentiel\CategorieAppel $categories)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCategories', array($categories));

        return parent::removeCategories($categories);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategories()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategories', array());

        return parent::getCategories();
    }

    /**
     * {@inheritDoc}
     */
    public function getCategoriesLibelle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategoriesLibelle', array());

        return parent::getCategoriesLibelle();
    }

    /**
     * {@inheritDoc}
     */
    public function addStatut(\AppBundle\Entity\Referentiel\Statut $statuts)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addStatut', array($statuts));

        return parent::addStatut($statuts);
    }

    /**
     * {@inheritDoc}
     */
    public function removeStatut(\AppBundle\Entity\Referentiel\Statut $statuts)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeStatut', array($statuts));

        return parent::removeStatut($statuts);
    }

    /**
     * {@inheritDoc}
     */
    public function addCategory(\AppBundle\Entity\Referentiel\CategorieAppel $categories)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCategory', array($categories));

        return parent::addCategory($categories);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCategory(\AppBundle\Entity\Referentiel\CategorieAppel $categories)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCategory', array($categories));

        return parent::removeCategory($categories);
    }

    /**
     * {@inheritDoc}
     */
    public function addOperation(\AppBundle\Entity\Operation $operations)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addOperation', array($operations));

        return parent::addOperation($operations);
    }

    /**
     * {@inheritDoc}
     */
    public function removeOperation(\AppBundle\Entity\Operation $operations)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeOperation', array($operations));

        return parent::removeOperation($operations);
    }

    /**
     * {@inheritDoc}
     */
    public function getOperations()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOperations', array());

        return parent::getOperations();
    }

    /**
     * {@inheritDoc}
     */
    public function addTransmission(\AppBundle\Entity\Referentiel\Transmission $transmissions)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTransmission', array($transmissions));

        return parent::addTransmission($transmissions);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTransmission(\AppBundle\Entity\Referentiel\Transmission $transmissions)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTransmission', array($transmissions));

        return parent::removeTransmission($transmissions);
    }

    /**
     * {@inheritDoc}
     */
    public function getTransmissions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTransmissions', array());

        return parent::getTransmissions();
    }

    /**
     * {@inheritDoc}
     */
    public function getTransmissionsLibelle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTransmissionsLibelle', array());

        return parent::getTransmissionsLibelle();
    }

    /**
     * {@inheritDoc}
     */
    public function setTransmissions($transmissions)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTransmissions', array($transmissions));

        return parent::setTransmissions($transmissions);
    }

}
