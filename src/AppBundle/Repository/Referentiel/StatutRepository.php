<?php

namespace AppBundle\Repository\Referentiel;

use Doctrine\ORM\EntityRepository;

/**
 * StatutRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class StatutRepository extends EntityRepository
{
    public function getAll()
    {
        $qB = $this->createQueryBuilder('s')
                ->select('s.libelle');
        $qB->expr()->isNull('s.dateSuppression');
        
        $qry = $qB->getQuery();
        
        $libellesStatut = array();
        foreach ($qry->getScalarResult() as $statut) {
            $libellesStatut[] = $statut['libelle'];
        }
        
        return $libellesStatut;
    }
    
    public function getStatutsStd()
    {
        $qB = $this->createQueryBuilder('s');
        $qB->innerJoin('s.typeActions', 't')
                ->where($qB->expr()->isNull('t.dateSuppression'))
                ->andWhere($qB->expr()->notLike('t.libelle', ':filtre'))
                ->setParameter('filtre', '%appel sortant%')
                ->orderBy('s.libelle');
        
        $qry = $qB->getQuery();
        
        return $qry->getResult();
    }
    public function getAppelsortantStatut()
    {
        $qB = $this->createQueryBuilder('s')
                ->select(array('s.id','s.libelle'))
                ->join('s.typeActions', 't')
                ->where('t.libelle LIKE :title')
                ->setParameter('title', '%appel sortant%')
                ->distinct()
                ->orderBy('s.libelle', 'ASC');
        $qB->expr()->isNull('s.date_suppression');
        
        return $qry = $qB->getQuery()->getResult();
    }
}
